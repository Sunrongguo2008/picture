name: Cleanup Converted Images

on:
  workflow_dispatch:

jobs:
  cleanup:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Process checked items
        run: |
          if [ ! -f README.md ]; then
            echo "README.md 不存在"
            exit 1
          fi
          
          # 统计已勾选的项
          total=$(grep -c "^- \[x\]" README.md || echo 0)
          
          if [ "$total" -eq 0 ]; then
            echo "没有已勾选的项需要处理"
            exit 0
          fi
          
          echo "找到 $total 个已勾选的项"
          current=0
          
          # 提取已勾选的项
          grep "^- \[x\]" README.md | while read -r line; do
            current=$((current + 1))
            # 提取原始文件路径
            orig=$(echo "$line" | sed -n 's/.*`\(.*\.[jpnegwbp]\+\)`.*/\1/p')
            
            if [ -n "$orig" ] && [ -f "$orig" ]; then
              echo "[$current/$total] 删除: $orig"
              rm "$orig"
              echo "$line" >> completed_items.txt
              echo "[$current/$total] ✓ 完成"
            else
              echo "[$current/$total] ✗ 文件不存在或路径无效: $orig"
            fi
          done
          
          if [ -f completed_items.txt ]; then
            deleted_count=$(wc -l < completed_items.txt)
            echo "========================================="
            echo "删除完成: $deleted_count/$total 个文件"
            echo "========================================="
          fi
      
      - name: Update README
        run: |
          if [ ! -f completed_items.txt ]; then
            exit 0
          fi
          
          # 读取已完成的项
          COMPLETED=$(cat completed_items.txt)
          
          # 从"待修改"区域移除已勾选项,添加到"完成"区域
          cat > update_readme.py << 'PYTHON_SCRIPT'
with open('README.md', 'r', encoding='utf-8') as f:
    content = f.read()

with open('completed_items.txt', 'r', encoding='utf-8') as f:
    completed_lines = set(line.strip() for line in f)

lines = content.split('\n')
new_lines = []
in_pending = False
in_completed = False
pending_items = []
completed_items = []

for line in lines:
    if line.strip() == '## 待修改':
        in_pending = True
        in_completed = False
        new_lines.append(line)
    elif line.strip() == '## 完成':
        # 添加未勾选的待修改项
        new_lines.extend(pending_items)
        if pending_items and not pending_items[-1].strip():
            pass
        else:
            new_lines.append('')
        
        in_pending = False
        in_completed = True
        new_lines.append(line)
        
        # 添加已完成项
        for comp in completed_lines:
            new_lines.append(comp)
    elif line.startswith('##') and line.strip() != '## 待修改' and line.strip() != '## 完成':
        if in_pending:
            new_lines.extend(pending_items)
            pending_items = []
        elif in_completed:
            new_lines.extend(completed_items)
            completed_items = []
        in_pending = False
        in_completed = False
        new_lines.append(line)
    elif in_pending:
        # 只保留未勾选的项
        if line.strip().startswith('- [ ]'):
            pending_items.append(line)
        elif not line.strip():
            pass  # 跳过空行
    elif in_completed:
        # 保留原有完成项
        if line.strip():
            completed_items.append(line)
    else:
        new_lines.append(line)

# 处理结尾
if in_pending:
    new_lines.extend(pending_items)
elif in_completed:
    new_lines.extend(completed_items)

with open('README.md', 'w', encoding='utf-8') as f:
    f.write('\n'.join(new_lines))
PYTHON_SCRIPT
          
          python3 update_readme.py
      
      - name: Commit changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git diff --staged --quiet || git commit -m "Cleanup converted images and update README"
          git push
